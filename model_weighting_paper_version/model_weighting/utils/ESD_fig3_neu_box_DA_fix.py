#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""""

(c) 2019 under a MIT License (https://mit-license.org)

To run:
python ESD_fig3_neu_box_DA_fix.py -p /home/meranna/python/esdweighting_large_ensembles CMIP5_neu_9P_DA_fix.nc CMIP5-ALL_neu_9P_DA_fix.nc CMIP5_neu_9P_DA_fix.nc CMIP5-ALL_neu_9P_DA_fix.nc CMIP5_neu_9P_DA_fix.nc CMIP5-ALL_neu_9P_DA_fix.nc CMIP5_neu_9P_DA_fix.nc CMIP5-ALL_neu_9P_DA_fix.nc CMIP5_neu_9P_DA_fix.nc CMIP5-ALL_neu_9P_DA_fix.nc -u -s box_NEU_9P_DA_fix.png

"""


import os
import argparse
import numpy as np
import xarray as xr
import matplotlib.pyplot as plt
import seaborn as sns

from utils_python.xarray import area_weighted_mean
from boxplot import boxplot

SAVEPATH = '../../'


def read_input():
    """Read the given configuration from the config file"""
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        dest='filenames', nargs='+', type=str,
        help='')
    parser.add_argument(
        '--path', '-p', dest='path', type=str, default='',
        help='')
    parser.add_argument(
        '--no-unweighted', '-u', dest='unweighted', action='store_false',
        help='')
    parser.add_argument(
        '--title', '-t', dest='title', type=str, default=None,
        help='')
    parser.add_argument(
        '--savename', '-s', dest='savename', type=str, default=None,
        help='')
    args = parser.parse_args()
    return args


def read_data(filename, path):
    ds = xr.open_dataset(os.path.join(path, filename))
    ds = area_weighted_mean(ds)

    # for CMIP5-ALL_neu_9P_DA_fix.nc
    ds['weights_mc_all'] = [0.0369529903296525, 0.0369529903296525, 0.00789557571531341, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.000223622172762458, 0.00757568838398542, 0.00757568838398542, 0.00757568838398542, 0.0207288754670184, 0.0207288754670184, 0.0207288754670184, 0.0207288754670184, 0.0207288754670184, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.00100158618894435, 0.0370404668427630, 0.0370404668427630, 0.0370404668427630, 0.0370404668427630, 0.0370404668427630, 0.00186400702563852, 0.00527487256310576, 0.00527487256310576, 0.00527487256310576, 0.0220506854381394, 0.0220506854381394, 0.0220506854381394, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.00129499009590567, 0.0115142107716664, 0.0115142107716664, 0.0115142107716664, 0.0115142107716664, 0.0115142107716664, 0.0115142107716664, 0.000152682252506608, 0.000152682252506608, 0.000152682252506608, 0.000152682252506608, 0.000152682252506608, 0.000152682252506608, 0.00944801694165041, 0.00944801694165041, 0.00944801694165041, 0.00944801694165041, 0.00944801694165041, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00135847908868839, 0.00400840036469699, 0.00400840036469699, 0.0155524889846518, 0.0155524889846518, 0.00335113762097806, 0.00335113762097806, 0.0174320531748485]
    ds['weights_mc_all'] = ds['weights_mc_all']/ds['weights_mc_all'].sum()

    ds['weights_ic_all'] = [0.0782604641068231, 0.0695514972117871, 0.00789557571531341, 0.00201692317667272, 0.00201692317667272, 0.00201692317667272, 0.00201692317667272, 0.00201692317667272, 0.00201692317667272, 0.0101788053554796, 0.0152051205905696, 0.0152051205905696, 0.0152051205905696, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.000234162278765610, 0.00111052286441345, 0.0255645854618377, 0.0415060871296176, 0.0207288754670184, 0.0207288754670184, 0.0207288754670184, 0.0207288754670184, 0.0207288754670184, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 3.14802067638986e-05, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00112260979563779, 0.00893094929848742, 0.00893094929848742, 0.00893094929848742, 0.00893094929848742, 0.00893094929848742, 0.0370404668427630, 0.0370404668427630, 0.0370404668427630, 0.0370404668427630, 0.0370404668427630, 0.00186400702563852, 0.00527487256310576, 0.00527487256310576, 0.00527487256310576, 0.144972913747555, 0.00780658495350885, 0.0456766702421899, 0.0113679426595628, 0.0146711522831160, 0.0176025662035585, 0.0100004382099991, 0.0146711522831160, 0.0100004382099991, 0.0141452724257955, 0.00497077094070862, 0.00490831069191025, 0.00497125902357383, 0.00497077094070862, 0.00497125902357383, 0.0526374597401102, 0.0130786797378713, 0.0217997155188756, 0.0217997155188756, 0.0217997155188756, 0.0217997155188756, 0.000130243631551600, 0.000130243631551600, 0.000130243631551600, 0.000130243631551600, 0.00341203435551315, 6.28629899129800e-07, 0.0227676785264735, 0.0297211268972951, 0.0204124020130546, 0.0204124020130546, 0.0204124020130546, 0.0554388846168218, 0.0554388846168218, 0.0554388846168218, 0.122616198420997, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00140717436632812, 0.00501284018497503, 0.0110207612738129, 0.0404851833511034, 0.0217247725875036, 0.00384832785928823, 0.00955622262462400, 0.0174320531748485]

    ds['weights_ic_all'] = ds['weights_ic_all']/ds['weights_ic_all'].sum()
    ds['weights_q_norm_all'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none_all'] = np.ones(288)/288

    # for CMIP5_neu_9P_DA_fix.nc
    ds['weights_ic'] = [0.0659090254416251, 0.0634127600564207, 0.00697737986343313, 0.00176778863539344, 0.00176778863539344, 0.00176778863539344, 0.00176778863539344, 0.00176778863539344, 0.00176778863539344, 0.00772898142491627, 0.0129845675654988, 0.0129845675654988, 0.0129845675654988, 0.000630392182257593, 0.0202620985586898, 0.0376089111046764, 0.0189469854054094, 0.0189469854054094, 0.0189469854054094, 0.0189469854054094, 0.0189469854054094, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 0.00767861786838925, 0.00767861786838925, 0.00767861786838925, 0.00767861786838925, 0.00767861786838925, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.00492280254659331, 0.00492280254659331, 0.00492280254659331, 0.130476413455570, 0.00534689955942724, 0.0434719757044674, 0.00934484197869562, 0.0136279210138440, 0.0153936563993022, 0.00930002838536717, 0.0136279210138440, 0.00930002838536717, 0.0123354884543809, 0.00389155184104562, 0.00377624535941361, 0.00414469645241206, 0.00389155184104562, 0.00414469645241206, 0.0474148394981459, 0.00973578470940712, 0.0198334791230916, 0.0198334791230916, 0.0198334791230916, 0.0198334791230916, 0.000103765234539357, 0.000103765234539357, 0.000103765234539357, 0.000103765234539357, 0.00302127295485722, 3.48734608226817e-07, 0.0220917117263817, 0.0289694064978044, 0.0188376185201033, 0.0188376185201033, 0.0188376185201033, 0.0507066467167848, 0.0507066467167848, 0.0507066467167848, 0.113252355767191, 0.00428106937538889, 0.0102313598944472, 0.0380835384079005, 0.0180762746181618, 0.00300924413926564, 0.00735635201056383, 0.0157031030646123]
    ds['weights_ic'] = ds['weights_ic']/ds['weights_ic'].sum()

    ds['weights_mc'] = [0.0323304463745115, 0.0323304463745115, 0.00697737986343313, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00188230480388570, 0.00650015576062486, 0.00650015576062486, 0.00650015576062486, 0.0189469854054094, 0.0189469854054094, 0.0189469854054094, 0.0189469854054094, 0.0189469854054094, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 2.28316788224882e-05, 0.00767861786838925, 0.00767861786838925, 0.00767861786838925, 0.00767861786838925, 0.00767861786838925, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.0287720089061949, 0.00492280254659331, 0.00492280254659331, 0.00492280254659331, 0.0199216987466071, 0.0199216987466071, 0.0199216987466071, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.00114379877057269, 0.0104023969493616, 0.0104023969493616, 0.0104023969493616, 0.0104023969493616, 0.0104023969493616, 0.0104023969493616, 0.000130051817835977, 0.000130051817835977, 0.000130051817835977, 0.000130051817835977, 0.000130051817835977, 0.000130051817835977, 0.00882398739620463, 0.00882398739620463, 0.00882398739620463, 0.00882398739620463, 0.00882398739620463, 0.0356007610136409, 0.0356007610136409, 0.0356007610136409, 0.0356007610136409, 0.00362810731745902, 0.00362810731745902, 0.0140399532565156, 0.0140399532565156, 0.00259139903745737, 0.00259139903745737, 0.0157031030646123]
    ds['weights_mc'] = ds['weights_mc']/ds['weights_mc'].sum()

    ds['weights_q_norm'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none'] = np.ones(88)/88


    return ds


def main():
    args = read_input()

    fig, ax = plt.subplots(figsize=(7, 5))
    fig.subplots_adjust(left=0.2, right=0.8, bottom=.22, top=.91)

    xticks = []
    xticklabels = ['equal','equal','perf.','perf.', '1/N, ic','1/N, ic', '1/N,m','1/N, m', 'RMSE','RMSE']
    colors = ['blue','0.65','blue','0.65','blue','0.65','blue','0.65','blue','0.65']
    weights = ['weights_none','weights_none_all','weights_q_norm','weights_q_norm_all','weights_ic','weights_ic_all','weights_mc','weights_mc_all','weights','weights']

    for xx, filename in enumerate(args.filenames):
        if filename == '':
            continue

        ds = read_data(filename, args.path)

        varn = ds.attrs['target']
        xticks.append(xx)
        xticklabels.append(ds.attrs['config'])

        if args.unweighted:
            h1 = boxplot(
                ax, xx,
                mean=ds[varn],
                box=ds[varn],
                whis=ds[varn],  # (ds[varn].min(), ds[varn].max()),
                width=.8,
                color=colors[xx], # sns.xkcd_rgb['greyish'],
                alpha=.3,
            )

        h2 = boxplot(
            ax, xx,
            mean=ds[varn],
            box=ds[varn],
            whis=ds[varn],
            weights=ds[weights[xx]],
            width=.6,
            color=colors[xx],
            alpha=1,
        )

    ax.set_xticks(xticks)
    ax.set_xticklabels(xticklabels, rotation=30, ha='center')

    try:
        unit = f' ({ds[varn].attrs["units"]})'
    except KeyError:
        unit = ''
    ax.set_ylabel('SAT $\Delta$ ($\degree$C)')
    ax.set_ylim([2, 9])
    #plt.gca().set_aspect('equal', adjustable='box')

    if args.title is not None:
        plt.title(args.title)

    if args.savename is None:
        plt.show()
    else:
        plt.savefig(os.path.join(SAVEPATH, args.savename), dpi=300)


if __name__ == '__main__':
    main()
