#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""""

(c) 2019 under a MIT License (https://mit-license.org)

To run:

python ESD_fig3_med_box_DA_fix_best.py -p /home/meranna/python/esd_weighting_large_ensembles/ CMIP5_med_9P_DA_fix_best.nc CMIP5-ALL_med_9P_DA_fix_best.nc CMIP5_med_9P_DA_fix_best.nc CMIP5-ALL_med_9P_DA_fix_best.nc CMIP5_med_9P_DA_fix_best.nc CMIP5-ALL_med_9P_DA_fix_best.nc CMIP5_med_9P_DA_fix_best.nc CMIP5-ALL_med_9P_DA_fix_best.nc CMIP5_med_9P_DA_fix_best.nc CMIP5-ALL_med_9P_DA_fix_best.nc -u -s box_MED_9P_DA_fix_best.png

"""


import os
import argparse
import numpy as np
import xarray as xr
import matplotlib.pyplot as plt
import seaborn as sns

from utils_python.xarray import area_weighted_mean
from boxplot import boxplot

SAVEPATH = '../../'


def read_input():
    """Read the given configuration from the config file"""
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        dest='filenames', nargs='+', type=str,
        help='')
    parser.add_argument(
        '--path', '-p', dest='path', type=str, default='',
        help='')
    parser.add_argument(
        '--no-unweighted', '-u', dest='unweighted', action='store_false',
        help='')
    parser.add_argument(
        '--title', '-t', dest='title', type=str, default=None,
        help='')
    parser.add_argument(
        '--savename', '-s', dest='savename', type=str, default=None,
        help='')
    args = parser.parse_args()
    return args


def read_data(filename, path):
    ds = xr.open_dataset(os.path.join(path, filename))
    ds = area_weighted_mean(ds)

    # for CMIP5-ALL_med_9P_DA_fix_best.nc
    ds['weights_ic_all'] = [0.0799212297865281, 0.0991501104631161, 0.00355090416936244, 0.0175800526997022, 0.0175800526997022, 0.0175800526997022, 0.0175800526997022, 0.0175800526997022, 0.0175800526997022, 0.137847841006054, 0.0558673816564371, 0.0558673816564371, 0.0558673816564371, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.00140336196773973, 0.0767836545231081, 0.0848404634182867, 0.0922159550282929, 0.0252370776505070, 0.0252370776505070, 0.0252370776505070, 0.0252370776505070, 0.0252370776505070, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.000926992696255780, 0.00820181588058064, 0.00820181588058064, 0.00820181588058064, 0.00820181588058064, 0.00820181588058064, 0.0236051118821537, 0.0236051118821537, 0.0236051118821537, 0.0236051118821537, 0.0236051118821537, 0.0736937402123117, 0.00862980763323842, 0.00862980763323842, 0.00862980763323842, 0.0864302907878062, 0.0168519269380017, 0.00381643513449763, 0.0361237757994686, 0.0190798185657880, 0.0372471601611859, 0.0382458592020622, 0.0190798185657880, 0.0382458592020622, 0.0769799195984690, 0.0320453923875567, 0.0688547758192422, 0.0417020799052823, 0.0320453923875567, 0.0417020799052823, 0.111611631630745, 0.117738785961798, 0.0352548041590223, 0.0352548041590223, 0.0352548041590223, 0.0352548041590223, 0.00449714417985167, 0.00449714417985167, 0.00449714417985167, 0.00449714417985167, 0.113935386563146, 0.00455420633885610, 0.0379465364707411, 0.0470947210136297, 0.0251055960430957, 0.0251055960430957, 0.0251055960430957, 0.0405837017395739, 0.0405837017395739, 0.0405837017395739, 0.135838042630498, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.000836738614324269, 0.0362092735672884, 0.0414815108681919, 0.163988115194310, 0.132484175147473, 0.0630194025670830, 0.0996666304662157, 0.0342111705909201]
    ds['weights_ic_all'] = ds['weights_ic_all']/ds['weights_ic_all'].sum()

    ds['weights_mc_all'] = [0.0447678350624111, 0.0447678350624111, 0.00355090416936244, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.00132831697012572, 0.0282044525521875, 0.0282044525521875, 0.0282044525521875, 0.0252370776505070, 0.0252370776505070, 0.0252370776505070, 0.0252370776505070, 0.0252370776505070, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.00744998626725123, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.000833893268645939, 0.0236051118821537, 0.0236051118821537, 0.0236051118821537, 0.0236051118821537, 0.0236051118821537, 0.0736937402123117, 0.00862980763323842, 0.00862980763323842, 0.00862980763323842, 0.0118998503178117, 0.0118998503178117, 0.0118998503178117, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.00516318216403558, 0.0220396467815806, 0.0220396467815806, 0.0220396467815806, 0.0220396467815806, 0.0220396467815806, 0.0220396467815806, 0.00529010832721190, 0.00529010832721190, 0.00529010832721190, 0.00529010832721190, 0.00529010832721190, 0.00529010832721190, 0.0124396648748893, 0.0124396648748893, 0.0124396648748893, 0.0124396648748893, 0.0124396648748893, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.000819940597404711, 0.0194226961088701, 0.0194226961088701, 0.0741180725854457, 0.0741180725854457, 0.0406715082583247, 0.0406715082583247, 0.0342111705909201]
    ds['weights_mc_all'] = ds['weights_mc_all']/ds['weights_mc_all'].sum()

    ds['weights_q_norm_all'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none_all'] = np.ones(288)/288

    ds['weights_ic'] = [0.0814281063120076, 0.101360732375565, 0.00387158068646408, 0.0182109998786213, 0.0182109998786213, 0.0182109998786213, 0.0182109998786213, 0.0182109998786213, 0.0182109998786213, 0.140863919084632, 0.0574894076825984, 0.0574894076825984, 0.0574894076825984, 0.0782840853808204, 0.0873137993435310, 0.0953285417013194, 0.0257098534242143, 0.0257098534242143, 0.0257098534242143, 0.0257098534242143, 0.0257098534242143, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00833272338258814, 0.00833272338258814, 0.00833272338258814, 0.00833272338258814, 0.00833272338258814, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.00880436359436853, 0.00880436359436853, 0.00880436359436853, 0.0897732071535642, 0.0182577607622864, 0.00443527060764555, 0.0378926428892257, 0.0198821618837288, 0.0386367304696207, 0.0395013119901435, 0.0198821618837288, 0.0395013119901435, 0.0788228878603702, 0.0332085558215958, 0.0715696432500609, 0.0434600839900184, 0.0332085558215958, 0.0434600839900184, 0.113046636510380, 0.119124118976484, 0.0358403976669652, 0.0358403976669652, 0.0358403976669652, 0.0358403976669652, 0.00455147377668773, 0.00455147377668773, 0.00455147377668773, 0.00455147377668773, 0.114734727530186, 0.00467592166118176, 0.0390015092086924, 0.0484132590434984, 0.0255324254078565, 0.0255324254078565, 0.0255324254078565, 0.0417708387761604, 0.0417708387761604, 0.0417708387761604, 0.137843157908220, 0.0368302891575653, 0.0423791381811358, 0.166587246898677, 0.136179964116823, 0.0658653676434850, 0.104283047403064, 0.0349836708545518]
    ds['weights_ic'] = ds['weights_ic']/ds['weights_ic'].sum()

    ds['weights_mc'] = [0.0456972096718932, 0.0456972096718932, 0.00387158068646408, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0131386458385839, 0.0289918251584079, 0.0289918251584079, 0.0289918251584079, 0.0257098534242143, 0.0257098534242143, 0.0257098534242143, 0.0257098534242143, 0.0257098534242143, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00765358393092044, 0.00833272338258814, 0.00833272338258814, 0.00833272338258814, 0.00833272338258814, 0.00833272338258814, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.0228193533713553, 0.00880436359436853, 0.00880436359436853, 0.00880436359436853, 0.0124962487248329, 0.0124962487248329, 0.0124962487248329, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.00535507193896683, 0.0223782532821752, 0.0223782532821752, 0.0223782532821752, 0.0223782532821752, 0.0223782532821752, 0.0223782532821752, 0.00533983971162143, 0.00533983971162143, 0.00533983971162143, 0.00533983971162143, 0.00533983971162143, 0.00533983971162143, 0.0126882638769160, 0.0126882638769160, 0.0126882638769160, 0.0126882638769160, 0.0126882638769160, 0.0321112941808540, 0.0321112941808540, 0.0321112941808540, 0.0321112941808540, 0.0198023568346753, 0.0198023568346753, 0.0756918027538749, 0.0756918027538749, 0.0425371037616373, 0.0425371037616373, 0.0349836708545518]
    ds['weights_mc'] = ds['weights_mc']/ds['weights_mc'].sum()

    ds['weights_q_norm'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none'] = np.ones(88)/88


    return ds


def main():
    args = read_input()

    fig, ax = plt.subplots(figsize=(7, 5))
    fig.subplots_adjust(left=0.2, right=0.8, bottom=.22, top=.91)

    xticks = []
    xticklabels = ['equal','equal','performance','performance', '1/N, ic members','1/N, ic members', '1/N, models','1/N, models', 'RMSE','RMSE']
    colors = ['blue','0.65','blue','0.65','blue','0.65','blue','0.65','blue','0.65']
    weights = ['weights_none','weights_none_all','weights_q_norm','weights_q_norm_all','weights_ic','weights_ic_all','weights_mc','weights_mc_all','weights','weights']

    for xx, filename in enumerate(args.filenames):
        if filename == '':
            continue

        ds = read_data(filename, args.path)

        varn = ds.attrs['target']
        xticks.append(xx)
        xticklabels.append(ds.attrs['config'])

        if args.unweighted:
            h1 = boxplot(
                ax, xx,
                mean=ds[varn],
                box=ds[varn],
                whis=ds[varn],  # (ds[varn].min(), ds[varn].max()),
                width=.8,
                color=colors[xx], # sns.xkcd_rgb['greyish'],
                alpha=.3,
            )

        h2 = boxplot(
            ax, xx,
            mean=ds[varn],
            box=ds[varn],
            whis=ds[varn],
            weights=ds[weights[xx]],
            width=.6,
            color=colors[xx],
            alpha=1,
        )

    ax.set_xticks(xticks)
    ax.set_xticklabels(xticklabels, rotation=30, ha='center')

    try:
        unit = f' ({ds[varn].attrs["units"]})'
    except KeyError:
        unit = ''
    ax.set_ylabel('SAT $\Delta$ ($\degree$C)')
    ax.set_ylim([2, 9])
    #plt.gca().set_aspect('equal', adjustable='box')

    if args.title is not None:
        plt.title(args.title)

    if args.savename is None:
        plt.show()
    else:
        plt.savefig(os.path.join(SAVEPATH, args.savename), dpi=300)


if __name__ == '__main__':
    main()
