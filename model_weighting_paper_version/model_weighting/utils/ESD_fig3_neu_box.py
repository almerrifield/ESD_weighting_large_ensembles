#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""""

(c) 2019 under a MIT License (https://mit-license.org)

To run:
python ESD_fig3_neu_box.py -p /home/meranna/python/ESD_weighting_project/weighted_ens/ CMIP5_neu_9P_v2.nc CMIP5-ALL_neu_9P_v2.nc CMIP5_neu_9P_v2.nc CMIP5-ALL_neu_9P_v2.nc CMIP5_neu_9P_v2.nc CMIP5-ALL_neu_9P_v2.nc CMIP5_neu_9P_v2.nc CMIP5-ALL_neu_9P_v2.nc CMIP5_neu_9P_v2.nc CMIP5-ALL_neu_9P_v2.nc -u -s box_NEU_9P.png

"""


import os
import argparse
import numpy as np
import xarray as xr
import matplotlib.pyplot as plt
import seaborn as sns

from utils_python.xarray import area_weighted_mean
from boxplot import boxplot

SAVEPATH = '../../plots/boxplots'


def read_input():
    """Read the given configuration from the config file"""
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        dest='filenames', nargs='+', type=str,
        help='')
    parser.add_argument(
        '--path', '-p', dest='path', type=str, default='',
        help='')
    parser.add_argument(
        '--no-unweighted', '-u', dest='unweighted', action='store_false',
        help='')
    parser.add_argument(
        '--title', '-t', dest='title', type=str, default=None,
        help='')
    parser.add_argument(
        '--savename', '-s', dest='savename', type=str, default=None,
        help='')
    args = parser.parse_args()
    return args


def read_data(filename, path):
    ds = xr.open_dataset(os.path.join(path, filename))
    ds = area_weighted_mean(ds)

    # for CMIP5-ALL_neu_9P_v2.nc
    ds['weights_mc_all'] = [0.0519684495104962, 0.0519684495104962, 0.00528928315039839, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.000196826232546333, 0.00843590211664639, 0.00843590211664639, 0.00843590211664639, 0.0211853533713132, 0.0211853533713132, 0.0211853533713132, 0.0211853533713132, 0.0211853533713132, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 2.43842579015591e-05, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.00121271885331108, 0.0461537219125901, 0.0461537219125901, 0.0461537219125901, 0.0461537219125901, 0.0461537219125901, 0.00214294419723561, 0.00324148233535707, 0.00324148233535707, 0.00324148233535707, 0.0223349242532901, 0.0223349242532901, 0.0223349242532901, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.00156503148476069, 0.0149216035052486, 0.0149216035052486, 0.0149216035052486, 0.0149216035052486, 0.0149216035052486, 0.0149216035052486, 0.000345992901257310, 0.000345992901257310, 0.000345992901257310, 0.000345992901257310, 0.000345992901257310, 0.000345992901257310, 0.00883044830394363, 0.00883044830394363, 0.00883044830394363, 0.00883044830394363, 0.00883044830394363, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00157976836762813, 0.00331303452460497, 0.00331303452460497, 0.0122832682662121, 0.0122832682662121, 0.00266064244524378, 0.00266064244524378, 0.0157976191507417]
    ds['weights_mc_all'] = ds['weights_mc_all']/ds['weights_mc_all'].sum()

    ds['weights_ic_all'] = [0.0506873152345471, 0.0500870001010942, 0.00256417063198165, 0.000863803896267789, 0.000863803896267789, 0.000863803896267789, 0.000863803896267789,0.000863803896267789, 0.000863803896267789, 0.00374726110951423, 0.00849275823070520, 0.00849275823070520, 0.00849275823070520, 9.28911879448266e-05, 9.28911879448266e-05,9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 9.28911879448266e-05, 0.000414496911640593, 0.0140805986517069, 0.0223113726517877, 0.0102703635631197, 0.0102703635631197, 0.0102703635631197, 0.0102703635631197, 0.0102703635631197, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 1.18211478221080e-05, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.000654579491439552, 0.00567906046413463, 0.00567906046413463, 0.00567906046413463, 0.00567906046413463, 0.00567906046413463, 0.0223746800690747, 0.0223746800690747, 0.0223746800690747, 0.0223746800690747, 0.0223746800690747, 0.00103886943093851, 0.00157142538451243, 0.00157142538451243, 0.00157142538451243, 0.0812793305187681, 0.00226701554333645, 0.0139025892442928, 0.00753333263494764, 0.00816363349905153, 0.0117666962195444, 0.00570982496298650, 0.00816363349905153, 0.00570982496298650, 0.00935050783219849, 0.00291145854301123, 0.00326982068608221, 0.00254838861676683, 0.00291145854301123, 0.00254838861676683, 0.0341249993798806, 0.00830690565725499, 0.0136240223451796, 0.0136240223451796, 0.0136240223451796, 0.0136240223451796, 0.000128454343999261, 0.000128454343999261, 0.000128454343999261, 0.000128454343999261, 0.00398206036946370, 1.04114920868242e-06, 0.00515866393160315, 0.00683931954433429, 0.0105582186780247, 0.0105582186780247, 0.0105582186780247, 0.0297544144936968, 0.0297544144936968, 0.0297544144936968, 0.0656230909358085, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.000795001700145025, 0.00204225983692364, 0.00438219171099055, 0.0147223657308445, 0.00909666218457424, 0.00107845081009328, 0.00408091844756054, 0.00765846522671256]

    ds['weights_ic_all'] = ds['weights_ic_all']/ds['weights_ic_all'].sum()
    ds['weights_q_norm_all'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none_all'] = np.ones(288)/288

    # for CMIP5_neu_9P_v2.nc
    ds['weights_ic'] = [0.0569924821317768, 0.0615528850278657, 0.00287684839617446, 0.000989291623655752, 0.000989291623655752, 0.000989291623655752, 0.000989291623655752, 0.000989291623655752, 0.000989291623655752, 0.00362645200930820, 0.00957453823734612, 0.00957453823734612, 0.00957453823734612, 0.000301128471870280, 0.0149254076527316, 0.0268280356898401, 0.0125544850039963, 0.0125544850039963, 0.0125544850039963, 0.0125544850039963, 0.0125544850039963, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 1.09775298295311e-05, 0.00649887889305261, 0.00649887889305261, 0.00649887889305261, 0.00649887889305261, 0.00649887889305261, 0.0233506495019221, 0.0233506495019221, 0.0233506495019221, 0.0233506495019221, 0.0233506495019221, 0.0233506495019221, 0.00191938091945592, 0.00191938091945592, 0.00191938091945592, 0.0982006580148391, 0.00198923648617189, 0.0172702473315458, 0.00810434428732132, 0.0100558218242553, 0.0135510743387476, 0.00705077718919593, 0.0100558218242553, 0.00705077718919593, 0.0108517344791539, 0.00301334534638672, 0.00333058850947048, 0.00279290654674263, 0.00301334534638672, 0.00279290654674263, 0.0412561815761165, 0.00815363175620175, 0.0166144320893954, 0.0166144320893954, 0.0166144320893954, 0.0166144320893954, 0.000132585689409592, 0.000132585689409592, 0.000132585689409592, 0.000132585689409592, 0.00460635814363639, 7.40443205286654e-07, 0.00650119361831786, 0.00854252486032772, 0.0128658720505988, 0.0128658720505988, 0.0128658720505988, 0.0364649310179668, 0.0364649310179668, 0.0364649310179668, 0.0808748419014684, 0.00228307904917499, 0.00529688231491314, 0.0180994187970468, 0.00983288695810432, 0.00106673597388643, 0.00410206611882681, 0.00910730781858947]
    ds['weights_ic'] = ds['weights_ic']/ds['weights_ic'].sum()

    ds['weights_mc'] = [0.0148181708949553, 0.0148181708949553, 0.00287684839617446, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.000125411794597030, 0.00155757673386822, 0.00155757673386822, 0.00155757673386822, 0.00251089700079925, 0.00251089700079925, 0.00251089700079925, 0.00251089700079925, 0.00251089700079925, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 1.09775298295311e-06, 0.00129977577861052, 0.00129977577861052, 0.00129977577861052, 0.00129977577861052, 0.00129977577861052, 0.00467012990038442, 0.00467012990038442, 0.00467012990038442, 0.00467012990038442, 0.00467012990038442, 0.00467012990038442, 0.000639793639818639, 0.000639793639818639, 0.000639793639818639, 0.00435037562342803, 0.00435037562342803, 0.00435037562342803, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 7.37784405329951e-05, 0.00145944780908632, 0.00145944780908632, 0.00145944780908632, 0.00145944780908632, 0.00145944780908632, 0.00145944780908632, 3.11503223027553e-05, 3.11503223027553e-05, 3.11503223027553e-05, 3.11503223027553e-05, 3.11503223027553e-05, 3.11503223027553e-05, 0.00104669253547228, 0.00104669253547228, 0.00104669253547228, 0.00104669253547228, 0.00104669253547228, 0.00639155032911203, 0.00639155032911203, 0.00639155032911203, 0.00639155032911203, 0.000947495170511015, 0.000947495170511015, 0.00349153821939390, 0.00349153821939390, 0.000646100261589155, 0.000646100261589155, 0.00910730781858947]
    ds['weights_mc'] = ds['weights_mc']/ds['weights_mc'].sum()

    ds['weights_q_norm'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none'] = np.ones(88)/88


    return ds


def main():
    args = read_input()

    fig, ax = plt.subplots(figsize=(7, 5))
    fig.subplots_adjust(left=0.2, right=0.8, bottom=.22, top=.91)

    xticks = []
    xticklabels = ['equal','equal','perf.','perf.', '1/N, ic','1/N, ic', '1/N,m','1/N, m', 'RMSE','RMSE']
    colors = ['blue','0.65','blue','0.65','blue','0.65','blue','0.65','blue','0.65']
    weights = ['weights_none','weights_none_all','weights_q_norm','weights_q_norm_all','weights_ic','weights_ic_all','weights_mc','weights_mc_all','weights','weights']

    for xx, filename in enumerate(args.filenames):
        if filename == '':
            continue

        ds = read_data(filename, args.path)

        varn = ds.attrs['target']
        xticks.append(xx)
        xticklabels.append(ds.attrs['config'])

        if args.unweighted:
            h1 = boxplot(
                ax, xx,
                mean=ds[varn],
                box=ds[varn],
                whis=ds[varn],  # (ds[varn].min(), ds[varn].max()),
                width=.8,
                color=colors[xx], # sns.xkcd_rgb['greyish'],
                alpha=.3,
            )

        h2 = boxplot(
            ax, xx,
            mean=ds[varn],
            box=ds[varn],
            whis=ds[varn],
            weights=ds[weights[xx]],
            width=.6,
            color=colors[xx],
            alpha=1,
        )

    ax.set_xticks(xticks)
    ax.set_xticklabels(xticklabels, rotation=30, ha='center')

    try:
        unit = f' ({ds[varn].attrs["units"]})'
    except KeyError:
        unit = ''
    ax.set_ylabel('SAT $\Delta$ ($\degree$C)')
    ax.set_ylim([2, 9])
    #plt.gca().set_aspect('equal', adjustable='box')

    if args.title is not None:
        plt.title(args.title)

    if args.savename is None:
        plt.show()
    else:
        plt.savefig(os.path.join(SAVEPATH, args.savename), dpi=300)


if __name__ == '__main__':
    main()
