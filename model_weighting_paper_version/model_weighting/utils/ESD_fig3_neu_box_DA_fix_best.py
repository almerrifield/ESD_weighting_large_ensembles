#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""""

(c) 2019 under a MIT License (https://mit-license.org)

To run:
python ESD_fig3_neu_box_DA_fix_best.py -p /home/meranna/python/esd_weighting_large_ensembles CMIP5_neu_9P_DA_fix_best.nc CMIP5-ALL_neu_9P_DA_fix.nc CMIP5_neu_9P_DA_fix_best.nc CMIP5-ALL_neu_9P_DA_fix_best.nc CMIP5_neu_9P_DA_fix_best.nc CMIP5-ALL_neu_9P_DA_fix_best.nc CMIP5_neu_9P_DA_fix_best.nc CMIP5-ALL_neu_9P_DA_fix_best.nc CMIP5_neu_9P_DA_fix_best.nc CMIP5-ALL_neu_9P_DA_fix_best.nc -u -s box_NEU_9P_DA_fix_best.png

"""


import os
import argparse
import numpy as np
import xarray as xr
import matplotlib.pyplot as plt
import seaborn as sns

from utils_python.xarray import area_weighted_mean
from boxplot import boxplot

SAVEPATH = '../../'


def read_input():
    """Read the given configuration from the config file"""
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        dest='filenames', nargs='+', type=str,
        help='')
    parser.add_argument(
        '--path', '-p', dest='path', type=str, default='',
        help='')
    parser.add_argument(
        '--no-unweighted', '-u', dest='unweighted', action='store_false',
        help='')
    parser.add_argument(
        '--title', '-t', dest='title', type=str, default=None,
        help='')
    parser.add_argument(
        '--savename', '-s', dest='savename', type=str, default=None,
        help='')
    args = parser.parse_args()
    return args


def read_data(filename, path):
    ds = xr.open_dataset(os.path.join(path, filename))
    ds = area_weighted_mean(ds)

    # for CMIP5-ALL_neu_9P_DA_fix_best.nc
    ds['weights_mc_all'] = [0.0679316202498926, 0.0679316202498926, 0.0217759358403415, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.000547510478316325, 0.0179448964438854, 0.0179448964438854, 0.0179448964438854, 0.0448157293910969, 0.0448157293910969, 0.0448157293910969, 0.0448157293910969, 0.0448157293910969, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.00175468998781131, 0.0416763531348045, 0.0416763531348045, 0.0416763531348045, 0.0416763531348045, 0.0416763531348045, 0.00514634292965141, 0.00997724508583466, 0.00997724508583466, 0.00997724508583466, 0.0342477908930083, 0.0342477908930083, 0.0342477908930083, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.00346010607564650, 0.0239444169793284, 0.0239444169793284, 0.0239444169793284, 0.0239444169793284, 0.0239444169793284, 0.0239444169793284, 0.000530077196174071, 0.000530077196174071, 0.000530077196174071, 0.000530077196174071, 0.000530077196174071, 0.000530077196174071, 0.0173161039061022, 0.0173161039061022, 0.0173161039061022, 0.0173161039061022, 0.0173161039061022, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.00216707468632810, 0.0121434844643639, 0.0121434844643639, 0.0259996087793537, 0.0259996087793537, 0.0103515135399188, 0.0103515135399188, 0.0403290698971819]
    ds['weights_mc_all'] = ds['weights_mc_all']/ds['weights_mc_all'].sum()

    ds['weights_ic_all'] = [0.170035690706966, 0.101690790292604, 0.0217759358403415, 0.00511133912710308, 0.00511133912710308, 0.00511133912710308, 0.00511133912710308, 0.00511133912710308, 0.00511133912710308, 0.0215375990716382, 0.0314063504684956, 0.0314063504684956, 0.0314063504684956, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.000593133904029985, 0.00344822058993842, 0.0645264080279494, 0.0935294393770811, 0.0448157293910969, 0.0448157293910969, 0.0448157293910969, 0.0448157293910969, 0.0448157293910969, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.000111141946048448, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.00196080115042499, 0.0162373734826694, 0.0162373734826694, 0.0162373734826694, 0.0162373734826694, 0.0162373734826694, 0.0416763531348045, 0.0416763531348045, 0.0416763531348045, 0.0416763531348045, 0.0416763531348045, 0.00514634292965141, 0.00997724508583466, 0.00997724508583466, 0.00997724508583466, 0.188024263836110, 0.0223931979047178, 0.0978126562962474, 0.0328875020233990, 0.0368479903205261, 0.0478192925518620, 0.0260613543818759, 0.0368479903205261, 0.0260613543818759, 0.0379884041624291, 0.0143260627413111, 0.0149785563204718, 0.0139099725150202, 0.0143260627413111, 0.0139099725150202, 0.114792401935603, 0.0344509934976026, 0.0445472259889136, 0.0445472259889136, 0.0445472259889136, 0.0445472259889136, 0.000460478719524570, 0.000460478719524570, 0.000460478719524570, 0.000460478719524570, 0.0117123843113200, 2.73523855340493e-06, 0.0308679260616577, 0.0315811562188857, 0.0411615017080012, 0.0411615017080012, 0.0411615017080012, 0.0979945760658846, 0.0979945760658846, 0.0979945760658846, 0.230880111985416, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.00223262485107463, 0.0161064643939164, 0.0324674734635393, 0.0683569849667027, 0.0356414501507119, 0.0126647547696419, 0.0287412993900331, 0.0403290698971819]

    ds['weights_ic_all'] = ds['weights_ic_all']/ds['weights_ic_all'].sum()
    ds['weights_q_norm_all'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none_all'] = np.ones(288)/288

    # for CMIP5_neu_9P_DA_fix.nc
    ds['weights_ic'] = [0.147662908933192, 0.0928492811927518, 0.0195113343253419, 0.00455272244048226, 0.00455272244048226, 0.00455272244048226, 0.00455272244048226, 0.00455272244048226, 0.00455272244048226, 0.0168251587855511, 0.0274636695579662, 0.0274636695579662, 0.0274636695579662, 0.00205689897624903, 0.0527473806482939, 0.0852710545719979, 0.0415629168130336, 0.0415629168130336, 0.0415629168130336, 0.0415629168130336, 0.0415629168130336, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 0.0142040710077886, 0.0142040710077886, 0.0142040710077886, 0.0142040710077886, 0.0142040710077886, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.00933229305832333, 0.00933229305832333, 0.00933229305832333, 0.170960772905746, 0.0160334920388853, 0.0931546244882425, 0.0276970305249978, 0.0346009510959196, 0.0426135224765772, 0.0243500738898684, 0.0346009510959196, 0.0243500738898684, 0.0335297237504207, 0.0115629720798375, 0.0118243767337137, 0.0118098583213309, 0.0115629720798375, 0.0118098583213309, 0.104870579819529, 0.0264929760235278, 0.0409185449797546, 0.0409185449797546, 0.0409185449797546, 0.0409185449797546, 0.000373695855254702, 0.000373695855254702, 0.000373695855254702, 0.000373695855254702, 0.0105199157010856, 1.55800727166352e-06, 0.0301196287219131, 0.0308271880937737, 0.0381342234080748, 0.0381342234080748, 0.0381342234080748, 0.0910160512202272, 0.0910160512202272, 0.0910160512202272, 0.215686884225117, 0.0139126169941522, 0.0301059279560559, 0.0648262624725157, 0.0301867739551750, 0.0102306570072921, 0.0229493728221231, 0.0364483156107965]
    ds['weights_ic'] = ds['weights_ic']/ds['weights_ic'].sum()

    ds['weights_mc'] = [0.0601280475314860, 0.0601280475314860, 0.0195113343253419, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.00427896192664608, 0.0155639260218379, 0.0155639260218379, 0.0155639260218379, 0.0415629168130336, 0.0415629168130336, 0.0415629168130336, 0.0415629168130336, 0.0415629168130336, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 8.23198683529589e-05, 0.0142040710077886, 0.0142040710077886, 0.0142040710077886, 0.0142040710077886, 0.0142040710077886, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.0325206196276115, 0.00933229305832333, 0.00933229305832333, 0.00933229305832333, 0.0311276543814304, 0.0311276543814304, 0.0311276543814304, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.00309000052106621, 0.0218350076533092, 0.0218350076533092, 0.0218350076533092, 0.0218350076533092, 0.0218350076533092, 0.0218350076533092, 0.000458350205345348, 0.000458350205345348, 0.000458350205345348, 0.000458350205345348, 0.000458350205345348, 0.000458350205345348, 0.0161661930995344, 0.0161661930995344, 0.0161661930995344, 0.0161661930995344, 0.0161661930995344, 0.0646769590754476, 0.0646769590754476, 0.0646769590754476, 0.0646769590754476, 0.0110046362375520, 0.0110046362375520, 0.0237532591069227, 0.0237532591069227, 0.00829500745735379, 0.00829500745735379, 0.0364483156107965]
    ds['weights_mc'] = ds['weights_mc']/ds['weights_mc'].sum()

    ds['weights_q_norm'] = ds['weights_q']/ds['weights_q'].sum()
    ds['weights_none'] = np.ones(88)/88


    return ds


def main():
    args = read_input()

    fig, ax = plt.subplots(figsize=(7, 5))
    fig.subplots_adjust(left=0.2, right=0.8, bottom=.22, top=.91)

    xticks = []
    xticklabels = ['equal','equal','perf.','perf.', '1/N, ic','1/N, ic', '1/N,m','1/N, m', 'RMSE','RMSE']
    colors = ['blue','0.65','blue','0.65','blue','0.65','blue','0.65','blue','0.65']
    weights = ['weights_none','weights_none_all','weights_q_norm','weights_q_norm_all','weights_ic','weights_ic_all','weights_mc','weights_mc_all','weights','weights']

    for xx, filename in enumerate(args.filenames):
        if filename == '':
            continue

        ds = read_data(filename, args.path)

        varn = ds.attrs['target']
        xticks.append(xx)
        xticklabels.append(ds.attrs['config'])

        if args.unweighted:
            h1 = boxplot(
                ax, xx,
                mean=ds[varn],
                box=ds[varn],
                whis=ds[varn],  # (ds[varn].min(), ds[varn].max()),
                width=.8,
                color=colors[xx], # sns.xkcd_rgb['greyish'],
                alpha=.3,
            )

        h2 = boxplot(
            ax, xx,
            mean=ds[varn],
            box=ds[varn],
            whis=ds[varn],
            weights=ds[weights[xx]],
            width=.6,
            color=colors[xx],
            alpha=1,
        )

    ax.set_xticks(xticks)
    ax.set_xticklabels(xticklabels, rotation=30, ha='center')

    try:
        unit = f' ({ds[varn].attrs["units"]})'
    except KeyError:
        unit = ''
    ax.set_ylabel('SAT $\Delta$ ($\degree$C)')
    ax.set_ylim([2, 9])
    #plt.gca().set_aspect('equal', adjustable='box')

    if args.title is not None:
        plt.title(args.title)

    if args.savename is None:
        plt.show()
    else:
        plt.savefig(os.path.join(SAVEPATH, args.savename), dpi=300)


if __name__ == '__main__':
    main()
